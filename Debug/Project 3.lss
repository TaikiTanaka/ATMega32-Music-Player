
Project 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000986  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d2  00800060  00000986  000009fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000afc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f5f  00000000  00000000  00000c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000911  00000000  00000000  00001b77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000084a  00000000  00000000  00002488  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  00002cd4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000415  00000000  00000000  00002f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b18  00000000  00000000  00003349  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00003e61  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e8       	ldi	r30, 0x86	; 134
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 33       	cpi	r26, 0x32	; 50
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 72 02 	call	0x4e4	; 0x4e4 <main>
  7a:	0c 94 c1 04 	jmp	0x982	; 0x982 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <ini_avr>:
#include "avr.h"

void
ini_avr(void)
{
  WDTCR = 15;
  82:	8f e0       	ldi	r24, 0x0F	; 15
  84:	81 bd       	out	0x21, r24	; 33
  86:	08 95       	ret

00000088 <wait_avr>:
}

void
wait_avr(unsigned short msec)
{
  88:	9c 01       	movw	r18, r24
  TCCR0 = 2;
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	83 bf       	out	0x33, r24	; 51
  while (msec--) {
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00005);
  8e:	8e ec       	ldi	r24, 0xCE	; 206

void
wait_avr(unsigned short msec)
{
  TCCR0 = 2;
  while (msec--) {
  90:	08 c0       	rjmp	.+16     	; 0xa2 <wait_avr+0x1a>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00005);
  92:	82 bf       	out	0x32, r24	; 50
    SET_BIT(TIFR, TOV0);
  94:	98 b7       	in	r25, 0x38	; 56
  96:	91 60       	ori	r25, 0x01	; 1
  98:	98 bf       	out	0x38, r25	; 56
    WDR();
  9a:	a8 95       	wdr
    while (!GET_BIT(TIFR, TOV0));
  9c:	08 b6       	in	r0, 0x38	; 56
  9e:	00 fe       	sbrs	r0, 0
  a0:	fd cf       	rjmp	.-6      	; 0x9c <wait_avr+0x14>

void
wait_avr(unsigned short msec)
{
  TCCR0 = 2;
  while (msec--) {
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	31 09       	sbc	r19, r1
  a6:	a8 f7       	brcc	.-22     	; 0x92 <wait_avr+0xa>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00005);
    SET_BIT(TIFR, TOV0);
    WDR();
    while (!GET_BIT(TIFR, TOV0));
  }
  TCCR0 = 0;
  a8:	13 be       	out	0x33, r1	; 51
  aa:	08 95       	ret

000000ac <output>:
{
  char c;
  while ((c = pgm_read_byte(s++)) != 0) {
    write(c, 1);
  }
}
  ac:	66 23       	and	r22, r22
  ae:	11 f0       	breq	.+4      	; 0xb4 <output+0x8>
  b0:	c0 9a       	sbi	0x18, 0	; 24
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <output+0xa>
  b4:	c0 98       	cbi	0x18, 0	; 24
  b6:	c1 98       	cbi	0x18, 1	; 24
  b8:	82 bb       	out	0x12, r24	; 18
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	81 bb       	out	0x11, r24	; 17
  be:	c2 9a       	sbi	0x18, 2	; 24
  c0:	00 00       	nop
  c2:	00 00       	nop
  c4:	00 00       	nop
  c6:	c2 98       	cbi	0x18, 2	; 24
  c8:	08 95       	ret

000000ca <write>:
  ca:	c0 98       	cbi	0x18, 0	; 24
  cc:	c1 9a       	sbi	0x18, 1	; 24
  ce:	11 ba       	out	0x11, r1	; 17
  d0:	90 b3       	in	r25, 0x10	; 16
  d2:	c2 9a       	sbi	0x18, 2	; 24
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	00 00       	nop
  da:	11 ba       	out	0x11, r1	; 17
  dc:	90 b3       	in	r25, 0x10	; 16
  de:	c2 98       	cbi	0x18, 2	; 24
  e0:	99 23       	and	r25, r25
  e2:	9c f3       	brlt	.-26     	; 0xca <write>
  e4:	0e 94 56 00 	call	0xac	; 0xac <output>
  e8:	08 95       	ret

000000ea <ini_lcd>:
  ea:	b8 9a       	sbi	0x17, 0	; 23
  ec:	b9 9a       	sbi	0x17, 1	; 23
  ee:	ba 9a       	sbi	0x17, 2	; 23
  f0:	80 e1       	ldi	r24, 0x10	; 16
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	80 e3       	ldi	r24, 0x30	; 48
  fc:	0e 94 56 00 	call	0xac	; 0xac <output>
 100:	85 e0       	ldi	r24, 0x05	; 5
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	80 e3       	ldi	r24, 0x30	; 48
 10c:	0e 94 56 00 	call	0xac	; 0xac <output>
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	8c e3       	ldi	r24, 0x3C	; 60
 11c:	0e 94 65 00 	call	0xca	; 0xca <write>
 120:	60 e0       	ldi	r22, 0x00	; 0
 122:	8c e0       	ldi	r24, 0x0C	; 12
 124:	0e 94 65 00 	call	0xca	; 0xca <write>
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	86 e0       	ldi	r24, 0x06	; 6
 12c:	0e 94 65 00 	call	0xca	; 0xca <write>
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0e 94 65 00 	call	0xca	; 0xca <write>
 138:	08 95       	ret

0000013a <clr_lcd>:
 13a:	60 e0       	ldi	r22, 0x00	; 0
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	0e 94 65 00 	call	0xca	; 0xca <write>
 142:	08 95       	ret

00000144 <pos_lcd>:
 144:	cf 93       	push	r28
 146:	c6 2f       	mov	r28, r22
 148:	98 e2       	ldi	r25, 0x28	; 40
 14a:	89 9f       	mul	r24, r25
 14c:	c0 0d       	add	r28, r0
 14e:	11 24       	eor	r1, r1
 150:	60 e0       	ldi	r22, 0x00	; 0
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	0e 94 65 00 	call	0xca	; 0xca <write>
 158:	cc 23       	and	r28, r28
 15a:	31 f0       	breq	.+12     	; 0x168 <pos_lcd+0x24>
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	84 e1       	ldi	r24, 0x14	; 20
 160:	0e 94 65 00 	call	0xca	; 0xca <write>
 164:	c1 50       	subi	r28, 0x01	; 1
 166:	d1 f7       	brne	.-12     	; 0x15c <pos_lcd+0x18>
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <puts_lcd2>:

void
puts_lcd2(const char *s)
{
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
  char c;
  while ((c = *(s++)) != 0) {
 170:	ec 01       	movw	r28, r24
 172:	21 96       	adiw	r28, 0x01	; 1
 174:	fc 01       	movw	r30, r24
 176:	80 81       	ld	r24, Z
 178:	88 23       	and	r24, r24
 17a:	31 f0       	breq	.+12     	; 0x188 <puts_lcd2+0x1c>
    write(c, 1);
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	0e 94 65 00 	call	0xca	; 0xca <write>

void
puts_lcd2(const char *s)
{
  char c;
  while ((c = *(s++)) != 0) {
 182:	89 91       	ld	r24, Y+
 184:	81 11       	cpse	r24, r1
 186:	fa cf       	rjmp	.-12     	; 0x17c <puts_lcd2+0x10>
    write(c, 1);
  }
}
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <playNote>:
}

void testNote(int note)
{
	playNote(note, H);
	wait_avr(100000);
 18e:	4f 92       	push	r4
 190:	5f 92       	push	r5
 192:	6f 92       	push	r6
 194:	7f 92       	push	r7
 196:	8f 92       	push	r8
 198:	9f 92       	push	r9
 19a:	af 92       	push	r10
 19c:	bf 92       	push	r11
 19e:	cf 92       	push	r12
 1a0:	df 92       	push	r13
 1a2:	ef 92       	push	r14
 1a4:	ff 92       	push	r15
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	eb 01       	movw	r28, r22
 1ac:	bc 01       	movw	r22, r24
 1ae:	99 0f       	add	r25, r25
 1b0:	88 0b       	sbc	r24, r24
 1b2:	99 0b       	sbc	r25, r25
 1b4:	0e 94 c8 03 	call	0x790	; 0x790 <__floatsisf>
 1b8:	4b 01       	movw	r8, r22
 1ba:	5c 01       	movw	r10, r24
 1bc:	be 01       	movw	r22, r28
 1be:	dd 0f       	add	r29, r29
 1c0:	88 0b       	sbc	r24, r24
 1c2:	99 0b       	sbc	r25, r25
 1c4:	0e 94 c8 03 	call	0x790	; 0x790 <__floatsisf>
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	4a e7       	ldi	r20, 0x7A	; 122
 1ce:	54 e4       	ldi	r21, 0x44	; 68
 1d0:	0e 94 25 03 	call	0x64a	; 0x64a <__divsf3>
 1d4:	a5 01       	movw	r20, r10
 1d6:	94 01       	movw	r18, r8
 1d8:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__mulsf3>
 1dc:	0e 94 97 03 	call	0x72e	; 0x72e <__fixunssfsi>
 1e0:	6b 01       	movw	r12, r22
 1e2:	7c 01       	movw	r14, r24
 1e4:	a5 01       	movw	r20, r10
 1e6:	94 01       	movw	r18, r8
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e8       	ldi	r24, 0x80	; 128
 1ee:	9f e3       	ldi	r25, 0x3F	; 63
 1f0:	0e 94 25 03 	call	0x64a	; 0x64a <__divsf3>
 1f4:	20 e0       	ldi	r18, 0x00	; 0
 1f6:	30 e4       	ldi	r19, 0x40	; 64
 1f8:	4c e9       	ldi	r20, 0x9C	; 156
 1fa:	56 e4       	ldi	r21, 0x46	; 70
 1fc:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__mulsf3>
 200:	4b 01       	movw	r8, r22
 202:	5c 01       	movw	r10, r24
 204:	23 e3       	ldi	r18, 0x33	; 51
 206:	33 e3       	ldi	r19, 0x33	; 51
 208:	43 e3       	ldi	r20, 0x33	; 51
 20a:	5f e3       	ldi	r21, 0x3F	; 63
 20c:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__mulsf3>
 210:	2b 01       	movw	r4, r22
 212:	3c 01       	movw	r6, r24
 214:	9b 01       	movw	r18, r22
 216:	ac 01       	movw	r20, r24
 218:	c5 01       	movw	r24, r10
 21a:	b4 01       	movw	r22, r8
 21c:	0e 94 b8 02 	call	0x570	; 0x570 <__subsf3>
 220:	4b 01       	movw	r8, r22
 222:	5c 01       	movw	r10, r24
 224:	c1 14       	cp	r12, r1
 226:	d1 04       	cpc	r13, r1
 228:	e1 04       	cpc	r14, r1
 22a:	f1 04       	cpc	r15, r1
 22c:	e9 f0       	breq	.+58     	; 0x268 <playNote+0xda>
 22e:	c0 e0       	ldi	r28, 0x00	; 0
 230:	d0 e0       	ldi	r29, 0x00	; 0
 232:	d8 9a       	sbi	0x1b, 0	; 27
 234:	c3 01       	movw	r24, r6
 236:	b2 01       	movw	r22, r4
 238:	0e 94 97 03 	call	0x72e	; 0x72e <__fixunssfsi>
 23c:	cb 01       	movw	r24, r22
 23e:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 242:	d8 98       	cbi	0x1b, 0	; 27
 244:	c5 01       	movw	r24, r10
 246:	b4 01       	movw	r22, r8
 248:	0e 94 97 03 	call	0x72e	; 0x72e <__fixunssfsi>
 24c:	cb 01       	movw	r24, r22
 24e:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 252:	21 96       	adiw	r28, 0x01	; 1
 254:	ce 01       	movw	r24, r28
 256:	0d 2e       	mov	r0, r29
 258:	00 0c       	add	r0, r0
 25a:	aa 0b       	sbc	r26, r26
 25c:	bb 0b       	sbc	r27, r27
 25e:	8c 15       	cp	r24, r12
 260:	9d 05       	cpc	r25, r13
 262:	ae 05       	cpc	r26, r14
 264:	bf 05       	cpc	r27, r15
 266:	28 f3       	brcs	.-54     	; 0x232 <playNote+0xa4>
 268:	82 e3       	ldi	r24, 0x32	; 50
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 270:	df 91       	pop	r29
 272:	cf 91       	pop	r28
 274:	ff 90       	pop	r15
 276:	ef 90       	pop	r14
 278:	df 90       	pop	r13
 27a:	cf 90       	pop	r12
 27c:	bf 90       	pop	r11
 27e:	af 90       	pop	r10
 280:	9f 90       	pop	r9
 282:	8f 90       	pop	r8
 284:	7f 90       	pop	r7
 286:	6f 90       	pop	r6
 288:	5f 90       	pop	r5
 28a:	4f 90       	pop	r4
 28c:	08 95       	ret

0000028e <displayLCD>:
 28e:	0f 93       	push	r16
 290:	1f 93       	push	r17
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	cd b7       	in	r28, 0x3d	; 61
 298:	de b7       	in	r29, 0x3e	; 62
 29a:	61 97       	sbiw	r28, 0x11	; 17
 29c:	0f b6       	in	r0, 0x3f	; 63
 29e:	f8 94       	cli
 2a0:	de bf       	out	0x3e, r29	; 62
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	cd bf       	out	0x3d, r28	; 61
 2a6:	8c 01       	movw	r16, r24
 2a8:	0e 94 9d 00 	call	0x13a	; 0x13a <clr_lcd>
 2ac:	60 e0       	ldi	r22, 0x00	; 0
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	0e 94 a2 00 	call	0x144	; 0x144 <pos_lcd>
 2b4:	01 15       	cp	r16, r1
 2b6:	11 05       	cpc	r17, r1
 2b8:	51 f4       	brne	.+20     	; 0x2ce <displayLCD+0x40>
 2ba:	8e e0       	ldi	r24, 0x0E	; 14
 2bc:	e8 e0       	ldi	r30, 0x08	; 8
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	de 01       	movw	r26, r28
 2c2:	11 96       	adiw	r26, 0x01	; 1
 2c4:	01 90       	ld	r0, Z+
 2c6:	0d 92       	st	X+, r0
 2c8:	8a 95       	dec	r24
 2ca:	e1 f7       	brne	.-8      	; 0x2c4 <displayLCD+0x36>
 2cc:	16 c0       	rjmp	.+44     	; 0x2fa <displayLCD+0x6c>
 2ce:	01 30       	cpi	r16, 0x01	; 1
 2d0:	11 05       	cpc	r17, r1
 2d2:	51 f4       	brne	.+20     	; 0x2e8 <displayLCD+0x5a>
 2d4:	80 e1       	ldi	r24, 0x10	; 16
 2d6:	e6 e1       	ldi	r30, 0x16	; 22
 2d8:	f1 e0       	ldi	r31, 0x01	; 1
 2da:	de 01       	movw	r26, r28
 2dc:	11 96       	adiw	r26, 0x01	; 1
 2de:	01 90       	ld	r0, Z+
 2e0:	0d 92       	st	X+, r0
 2e2:	8a 95       	dec	r24
 2e4:	e1 f7       	brne	.-8      	; 0x2de <displayLCD+0x50>
 2e6:	09 c0       	rjmp	.+18     	; 0x2fa <displayLCD+0x6c>
 2e8:	86 e0       	ldi	r24, 0x06	; 6
 2ea:	e6 e2       	ldi	r30, 0x26	; 38
 2ec:	f1 e0       	ldi	r31, 0x01	; 1
 2ee:	de 01       	movw	r26, r28
 2f0:	11 96       	adiw	r26, 0x01	; 1
 2f2:	01 90       	ld	r0, Z+
 2f4:	0d 92       	st	X+, r0
 2f6:	8a 95       	dec	r24
 2f8:	e1 f7       	brne	.-8      	; 0x2f2 <displayLCD+0x64>
 2fa:	ce 01       	movw	r24, r28
 2fc:	01 96       	adiw	r24, 0x01	; 1
 2fe:	0e 94 b6 00 	call	0x16c	; 0x16c <puts_lcd2>
 302:	61 96       	adiw	r28, 0x11	; 17
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	de bf       	out	0x3e, r29	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	cd bf       	out	0x3d, r28	; 61
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	1f 91       	pop	r17
 314:	0f 91       	pop	r16
 316:	08 95       	ret

00000318 <is_pressed>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	14 ba       	out	0x14, r1	; 20
 31e:	15 ba       	out	0x15, r1	; 21
 320:	44 b3       	in	r20, 0x14	; 20
 322:	21 e0       	ldi	r18, 0x01	; 1
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	f9 01       	movw	r30, r18
 328:	02 c0       	rjmp	.+4      	; 0x32e <is_pressed+0x16>
 32a:	ee 0f       	add	r30, r30
 32c:	ff 1f       	adc	r31, r31
 32e:	8a 95       	dec	r24
 330:	e2 f7       	brpl	.-8      	; 0x32a <is_pressed+0x12>
 332:	cf 01       	movw	r24, r30
 334:	4e 2b       	or	r20, r30
 336:	44 bb       	out	0x14, r20	; 20
 338:	95 b3       	in	r25, 0x15	; 21
 33a:	80 95       	com	r24
 33c:	89 23       	and	r24, r25
 33e:	85 bb       	out	0x15, r24	; 21
 340:	84 b3       	in	r24, 0x14	; 20
 342:	eb 01       	movw	r28, r22
 344:	24 96       	adiw	r28, 0x04	; 4
 346:	0c 2e       	mov	r0, r28
 348:	02 c0       	rjmp	.+4      	; 0x34e <is_pressed+0x36>
 34a:	22 0f       	add	r18, r18
 34c:	33 1f       	adc	r19, r19
 34e:	0a 94       	dec	r0
 350:	e2 f7       	brpl	.-8      	; 0x34a <is_pressed+0x32>
 352:	92 2f       	mov	r25, r18
 354:	90 95       	com	r25
 356:	89 23       	and	r24, r25
 358:	84 bb       	out	0x14, r24	; 20
 35a:	85 b3       	in	r24, 0x15	; 21
 35c:	28 2b       	or	r18, r24
 35e:	25 bb       	out	0x15, r18	; 21
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 368:	23 b3       	in	r18, 0x13	; 19
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	02 c0       	rjmp	.+4      	; 0x372 <is_pressed+0x5a>
 36e:	35 95       	asr	r19
 370:	27 95       	ror	r18
 372:	ca 95       	dec	r28
 374:	e2 f7       	brpl	.-8      	; 0x36e <is_pressed+0x56>
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	20 ff       	sbrs	r18, 0
 37c:	02 c0       	rjmp	.+4      	; 0x382 <is_pressed+0x6a>
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	df 91       	pop	r29
 384:	cf 91       	pop	r28
 386:	08 95       	ret

00000388 <get_key>:
 388:	0f 93       	push	r16
 38a:	1f 93       	push	r17
 38c:	cf 93       	push	r28
 38e:	df 93       	push	r29
 390:	00 e0       	ldi	r16, 0x00	; 0
 392:	10 e0       	ldi	r17, 0x00	; 0
 394:	1c c0       	rjmp	.+56     	; 0x3ce <get_key+0x46>
 396:	be 01       	movw	r22, r28
 398:	c8 01       	movw	r24, r16
 39a:	0e 94 8c 01 	call	0x318	; 0x318 <is_pressed>
 39e:	00 97       	sbiw	r24, 0x00	; 0
 3a0:	69 f0       	breq	.+26     	; 0x3bc <get_key+0x34>
 3a2:	8c e2       	ldi	r24, 0x2C	; 44
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	0e 94 44 00 	call	0x88	; 0x88 <wait_avr>
 3aa:	00 0f       	add	r16, r16
 3ac:	11 1f       	adc	r17, r17
 3ae:	00 0f       	add	r16, r16
 3b0:	11 1f       	adc	r17, r17
 3b2:	c0 0f       	add	r28, r16
 3b4:	d1 1f       	adc	r29, r17
 3b6:	ce 01       	movw	r24, r28
 3b8:	01 96       	adiw	r24, 0x01	; 1
 3ba:	0c c0       	rjmp	.+24     	; 0x3d4 <get_key+0x4c>
 3bc:	21 96       	adiw	r28, 0x01	; 1
 3be:	c4 30       	cpi	r28, 0x04	; 4
 3c0:	d1 05       	cpc	r29, r1
 3c2:	49 f7       	brne	.-46     	; 0x396 <get_key+0xe>
 3c4:	0f 5f       	subi	r16, 0xFF	; 255
 3c6:	1f 4f       	sbci	r17, 0xFF	; 255
 3c8:	04 30       	cpi	r16, 0x04	; 4
 3ca:	11 05       	cpc	r17, r1
 3cc:	19 f0       	breq	.+6      	; 0x3d4 <get_key+0x4c>
 3ce:	c0 e0       	ldi	r28, 0x00	; 0
 3d0:	d0 e0       	ldi	r29, 0x00	; 0
 3d2:	e1 cf       	rjmp	.-62     	; 0x396 <get_key+0xe>
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	1f 91       	pop	r17
 3da:	0f 91       	pop	r16
 3dc:	08 95       	ret

000003de <translateKey>:
 3de:	81 30       	cpi	r24, 0x01	; 1
 3e0:	91 05       	cpc	r25, r1
 3e2:	79 f1       	breq	.+94     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3e4:	82 30       	cpi	r24, 0x02	; 2
 3e6:	91 05       	cpc	r25, r1
 3e8:	79 f1       	breq	.+94     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 3ea:	83 30       	cpi	r24, 0x03	; 3
 3ec:	91 05       	cpc	r25, r1
 3ee:	79 f1       	breq	.+94     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 3f0:	84 30       	cpi	r24, 0x04	; 4
 3f2:	91 05       	cpc	r25, r1
 3f4:	79 f1       	breq	.+94     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 3f6:	85 30       	cpi	r24, 0x05	; 5
 3f8:	91 05       	cpc	r25, r1
 3fa:	79 f1       	breq	.+94     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 3fc:	86 30       	cpi	r24, 0x06	; 6
 3fe:	91 05       	cpc	r25, r1
 400:	79 f1       	breq	.+94     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 402:	87 30       	cpi	r24, 0x07	; 7
 404:	91 05       	cpc	r25, r1
 406:	79 f1       	breq	.+94     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 408:	88 30       	cpi	r24, 0x08	; 8
 40a:	91 05       	cpc	r25, r1
 40c:	79 f1       	breq	.+94     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 40e:	89 30       	cpi	r24, 0x09	; 9
 410:	91 05       	cpc	r25, r1
 412:	79 f1       	breq	.+94     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 414:	8a 30       	cpi	r24, 0x0A	; 10
 416:	91 05       	cpc	r25, r1
 418:	79 f1       	breq	.+94     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 41a:	8b 30       	cpi	r24, 0x0B	; 11
 41c:	91 05       	cpc	r25, r1
 41e:	79 f1       	breq	.+94     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 420:	8c 30       	cpi	r24, 0x0C	; 12
 422:	91 05       	cpc	r25, r1
 424:	79 f1       	breq	.+94     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 426:	8d 30       	cpi	r24, 0x0D	; 13
 428:	91 05       	cpc	r25, r1
 42a:	79 f1       	breq	.+94     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 42c:	8e 30       	cpi	r24, 0x0E	; 14
 42e:	91 05       	cpc	r25, r1
 430:	79 f1       	breq	.+94     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 432:	8f 30       	cpi	r24, 0x0F	; 15
 434:	91 05       	cpc	r25, r1
 436:	79 f1       	breq	.+94     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 438:	40 97       	sbiw	r24, 0x10	; 16
 43a:	81 f1       	breq	.+96     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 43c:	81 e1       	ldi	r24, 0x11	; 17
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	08 95       	ret
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	08 95       	ret
 448:	82 e0       	ldi	r24, 0x02	; 2
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	08 95       	ret
 44e:	83 e0       	ldi	r24, 0x03	; 3
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	08 95       	ret
 454:	8a e0       	ldi	r24, 0x0A	; 10
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	08 95       	ret
 45a:	84 e0       	ldi	r24, 0x04	; 4
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	08 95       	ret
 460:	85 e0       	ldi	r24, 0x05	; 5
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	08 95       	ret
 466:	86 e0       	ldi	r24, 0x06	; 6
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	08 95       	ret
 46c:	8b e0       	ldi	r24, 0x0B	; 11
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	08 95       	ret
 472:	87 e0       	ldi	r24, 0x07	; 7
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	08 95       	ret
 478:	88 e0       	ldi	r24, 0x08	; 8
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	08 95       	ret
 47e:	89 e0       	ldi	r24, 0x09	; 9
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	08 95       	ret
 484:	8c e0       	ldi	r24, 0x0C	; 12
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	08 95       	ret
 48a:	8d e0       	ldi	r24, 0x0D	; 13
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	08 95       	ret
 490:	80 e0       	ldi	r24, 0x00	; 0
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	08 95       	ret
 496:	8f e0       	ldi	r24, 0x0F	; 15
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	08 95       	ret
 49c:	80 e1       	ldi	r24, 0x10	; 16
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	08 95       	ret

000004a2 <playSong>:
}
void playSong(struct note * song, int len)
{
 4a2:	ef 92       	push	r14
 4a4:	ff 92       	push	r15
 4a6:	0f 93       	push	r16
 4a8:	1f 93       	push	r17
 4aa:	cf 93       	push	r28
 4ac:	df 93       	push	r29
	for(int i=0;i<len;i++)
 4ae:	16 16       	cp	r1, r22
 4b0:	17 06       	cpc	r1, r23
 4b2:	8c f4       	brge	.+34     	; 0x4d6 <playSong+0x34>
 4b4:	7b 01       	movw	r14, r22
 4b6:	c8 2f       	mov	r28, r24
 4b8:	d9 2f       	mov	r29, r25
 4ba:	00 e0       	ldi	r16, 0x00	; 0
 4bc:	10 e0       	ldi	r17, 0x00	; 0
	{
		playNote(song[i].f, song[i].d);
 4be:	6a 81       	ldd	r22, Y+2	; 0x02
 4c0:	7b 81       	ldd	r23, Y+3	; 0x03
 4c2:	88 81       	ld	r24, Y
 4c4:	99 81       	ldd	r25, Y+1	; 0x01
 4c6:	0e 94 c7 00 	call	0x18e	; 0x18e <playNote>
	playNote(note, H);
	wait_avr(100000);
}
void playSong(struct note * song, int len)
{
	for(int i=0;i<len;i++)
 4ca:	0f 5f       	subi	r16, 0xFF	; 255
 4cc:	1f 4f       	sbci	r17, 0xFF	; 255
 4ce:	24 96       	adiw	r28, 0x04	; 4
 4d0:	e0 16       	cp	r14, r16
 4d2:	f1 06       	cpc	r15, r17
 4d4:	a1 f7       	brne	.-24     	; 0x4be <playSong+0x1c>
	{
		playNote(song[i].f, song[i].d);
	}
}
 4d6:	df 91       	pop	r29
 4d8:	cf 91       	pop	r28
 4da:	1f 91       	pop	r17
 4dc:	0f 91       	pop	r16
 4de:	ff 90       	pop	r15
 4e0:	ef 90       	pop	r14
 4e2:	08 95       	ret

000004e4 <main>:
int main(void)
{
 4e4:	cf 93       	push	r28
 4e6:	df 93       	push	r29
 4e8:	cd b7       	in	r28, 0x3d	; 61
 4ea:	de b7       	in	r29, 0x3e	; 62
 4ec:	c8 5a       	subi	r28, 0xA8	; 168
 4ee:	d1 09       	sbc	r29, r1
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	f8 94       	cli
 4f4:	de bf       	out	0x3e, r29	; 62
 4f6:	0f be       	out	0x3f, r0	; 63
 4f8:	cd bf       	out	0x3d, r28	; 61
	//disabling jtag
	//setting Port A as an output
	SET_BIT(DDRA,0);
 4fa:	d0 9a       	sbi	0x1a, 0	; 26
	MCUCSR = (1<<JTD);
 4fc:	80 e8       	ldi	r24, 0x80	; 128
 4fe:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1<<JTD);
 500:	84 bf       	out	0x34, r24	; 52
	char buf[17];
	ini_lcd();
 502:	0e 94 75 00 	call	0xea	; 0xea <ini_lcd>
	ini_avr();
 506:	0e 94 41 00 	call	0x82	; 0x82 <ini_avr>
	int key;
	int displayFlag = 0;//0 for no song, 1 for song1, 2 for song2
	const struct note twinkle[] = {
 50a:	88 ea       	ldi	r24, 0xA8	; 168
 50c:	e0 e6       	ldi	r30, 0x60	; 96
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	de 01       	movw	r26, r28
 512:	11 96       	adiw	r26, 0x01	; 1
 514:	01 90       	ld	r0, Z+
 516:	0d 92       	st	X+, r0
 518:	8a 95       	dec	r24
 51a:	e1 f7       	brne	.-8      	; 0x514 <main+0x30>
	MCUCSR = (1<<JTD);
	char buf[17];
	ini_lcd();
	ini_avr();
	int key;
	int displayFlag = 0;//0 for no song, 1 for song1, 2 for song2
 51c:	00 e0       	ldi	r16, 0x00	; 0
 51e:	10 e0       	ldi	r17, 0x00	; 0
		}
	};

	while(1)
	{
		key = translateKey(get_key());
 520:	0e 94 c4 01 	call	0x388	; 0x388 <get_key>
 524:	0e 94 ef 01 	call	0x3de	; 0x3de <translateKey>
		
		if(key == 10)//Input is A, then display song1
 528:	8a 30       	cpi	r24, 0x0A	; 10
 52a:	91 05       	cpc	r25, r1
 52c:	39 f4       	brne	.+14     	; 0x53c <main+0x58>
		{
			displayFlag = 1;
			displayLCD(displayFlag);
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	0e 94 47 01 	call	0x28e	; 0x28e <displayLCD>
	{
		key = translateKey(get_key());
		
		if(key == 10)//Input is A, then display song1
		{
			displayFlag = 1;
 536:	01 e0       	ldi	r16, 0x01	; 1
 538:	10 e0       	ldi	r17, 0x00	; 0
 53a:	f2 cf       	rjmp	.-28     	; 0x520 <main+0x3c>
			displayLCD(displayFlag);
		}
		
		else if (key == 11) // Input is B, then display song2
 53c:	8b 30       	cpi	r24, 0x0B	; 11
 53e:	91 05       	cpc	r25, r1
 540:	39 f4       	brne	.+14     	; 0x550 <main+0x6c>
		{
			displayFlag = 2;
			displayLCD(displayFlag);
 542:	82 e0       	ldi	r24, 0x02	; 2
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 94 47 01 	call	0x28e	; 0x28e <displayLCD>
			displayLCD(displayFlag);
		}
		
		else if (key == 11) // Input is B, then display song2
		{
			displayFlag = 2;
 54a:	02 e0       	ldi	r16, 0x02	; 2
 54c:	10 e0       	ldi	r17, 0x00	; 0
 54e:	e8 cf       	rjmp	.-48     	; 0x520 <main+0x3c>
			displayLCD(displayFlag);
		}
		
		else if (key == 12)//Play the song!
 550:	0c 97       	sbiw	r24, 0x0c	; 12
 552:	51 f4       	brne	.+20     	; 0x568 <main+0x84>
		{
			if(displayFlag == 1)
 554:	01 30       	cpi	r16, 0x01	; 1
 556:	11 05       	cpc	r17, r1
 558:	19 f7       	brne	.-58     	; 0x520 <main+0x3c>
				playSong(twinkle,49);
 55a:	61 e3       	ldi	r22, 0x31	; 49
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	ce 01       	movw	r24, r28
 560:	01 96       	adiw	r24, 0x01	; 1
 562:	0e 94 51 02 	call	0x4a2	; 0x4a2 <playSong>
 566:	dc cf       	rjmp	.-72     	; 0x520 <main+0x3c>
			
		}
		
		else
		{
			displayLCD(displayFlag);
 568:	c8 01       	movw	r24, r16
 56a:	0e 94 47 01 	call	0x28e	; 0x28e <displayLCD>
 56e:	d8 cf       	rjmp	.-80     	; 0x520 <main+0x3c>

00000570 <__subsf3>:
 570:	50 58       	subi	r21, 0x80	; 128

00000572 <__addsf3>:
 572:	bb 27       	eor	r27, r27
 574:	aa 27       	eor	r26, r26
 576:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__addsf3x>
 57a:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_round>
 57e:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_pscA>
 582:	38 f0       	brcs	.+14     	; 0x592 <__addsf3+0x20>
 584:	0e 94 13 04 	call	0x826	; 0x826 <__fp_pscB>
 588:	20 f0       	brcs	.+8      	; 0x592 <__addsf3+0x20>
 58a:	39 f4       	brne	.+14     	; 0x59a <__addsf3+0x28>
 58c:	9f 3f       	cpi	r25, 0xFF	; 255
 58e:	19 f4       	brne	.+6      	; 0x596 <__addsf3+0x24>
 590:	26 f4       	brtc	.+8      	; 0x59a <__addsf3+0x28>
 592:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_nan>
 596:	0e f4       	brtc	.+2      	; 0x59a <__addsf3+0x28>
 598:	e0 95       	com	r30
 59a:	e7 fb       	bst	r30, 7
 59c:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_inf>

000005a0 <__addsf3x>:
 5a0:	e9 2f       	mov	r30, r25
 5a2:	0e 94 2b 04 	call	0x856	; 0x856 <__fp_split3>
 5a6:	58 f3       	brcs	.-42     	; 0x57e <__addsf3+0xc>
 5a8:	ba 17       	cp	r27, r26
 5aa:	62 07       	cpc	r22, r18
 5ac:	73 07       	cpc	r23, r19
 5ae:	84 07       	cpc	r24, r20
 5b0:	95 07       	cpc	r25, r21
 5b2:	20 f0       	brcs	.+8      	; 0x5bc <__addsf3x+0x1c>
 5b4:	79 f4       	brne	.+30     	; 0x5d4 <__addsf3x+0x34>
 5b6:	a6 f5       	brtc	.+104    	; 0x620 <__addsf3x+0x80>
 5b8:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__fp_zero>
 5bc:	0e f4       	brtc	.+2      	; 0x5c0 <__addsf3x+0x20>
 5be:	e0 95       	com	r30
 5c0:	0b 2e       	mov	r0, r27
 5c2:	ba 2f       	mov	r27, r26
 5c4:	a0 2d       	mov	r26, r0
 5c6:	0b 01       	movw	r0, r22
 5c8:	b9 01       	movw	r22, r18
 5ca:	90 01       	movw	r18, r0
 5cc:	0c 01       	movw	r0, r24
 5ce:	ca 01       	movw	r24, r20
 5d0:	a0 01       	movw	r20, r0
 5d2:	11 24       	eor	r1, r1
 5d4:	ff 27       	eor	r31, r31
 5d6:	59 1b       	sub	r21, r25
 5d8:	99 f0       	breq	.+38     	; 0x600 <__addsf3x+0x60>
 5da:	59 3f       	cpi	r21, 0xF9	; 249
 5dc:	50 f4       	brcc	.+20     	; 0x5f2 <__addsf3x+0x52>
 5de:	50 3e       	cpi	r21, 0xE0	; 224
 5e0:	68 f1       	brcs	.+90     	; 0x63c <__addsf3x+0x9c>
 5e2:	1a 16       	cp	r1, r26
 5e4:	f0 40       	sbci	r31, 0x00	; 0
 5e6:	a2 2f       	mov	r26, r18
 5e8:	23 2f       	mov	r18, r19
 5ea:	34 2f       	mov	r19, r20
 5ec:	44 27       	eor	r20, r20
 5ee:	58 5f       	subi	r21, 0xF8	; 248
 5f0:	f3 cf       	rjmp	.-26     	; 0x5d8 <__addsf3x+0x38>
 5f2:	46 95       	lsr	r20
 5f4:	37 95       	ror	r19
 5f6:	27 95       	ror	r18
 5f8:	a7 95       	ror	r26
 5fa:	f0 40       	sbci	r31, 0x00	; 0
 5fc:	53 95       	inc	r21
 5fe:	c9 f7       	brne	.-14     	; 0x5f2 <__addsf3x+0x52>
 600:	7e f4       	brtc	.+30     	; 0x620 <__addsf3x+0x80>
 602:	1f 16       	cp	r1, r31
 604:	ba 0b       	sbc	r27, r26
 606:	62 0b       	sbc	r22, r18
 608:	73 0b       	sbc	r23, r19
 60a:	84 0b       	sbc	r24, r20
 60c:	ba f0       	brmi	.+46     	; 0x63c <__addsf3x+0x9c>
 60e:	91 50       	subi	r25, 0x01	; 1
 610:	a1 f0       	breq	.+40     	; 0x63a <__addsf3x+0x9a>
 612:	ff 0f       	add	r31, r31
 614:	bb 1f       	adc	r27, r27
 616:	66 1f       	adc	r22, r22
 618:	77 1f       	adc	r23, r23
 61a:	88 1f       	adc	r24, r24
 61c:	c2 f7       	brpl	.-16     	; 0x60e <__addsf3x+0x6e>
 61e:	0e c0       	rjmp	.+28     	; 0x63c <__addsf3x+0x9c>
 620:	ba 0f       	add	r27, r26
 622:	62 1f       	adc	r22, r18
 624:	73 1f       	adc	r23, r19
 626:	84 1f       	adc	r24, r20
 628:	48 f4       	brcc	.+18     	; 0x63c <__addsf3x+0x9c>
 62a:	87 95       	ror	r24
 62c:	77 95       	ror	r23
 62e:	67 95       	ror	r22
 630:	b7 95       	ror	r27
 632:	f7 95       	ror	r31
 634:	9e 3f       	cpi	r25, 0xFE	; 254
 636:	08 f0       	brcs	.+2      	; 0x63a <__addsf3x+0x9a>
 638:	b0 cf       	rjmp	.-160    	; 0x59a <__addsf3+0x28>
 63a:	93 95       	inc	r25
 63c:	88 0f       	add	r24, r24
 63e:	08 f0       	brcs	.+2      	; 0x642 <__addsf3x+0xa2>
 640:	99 27       	eor	r25, r25
 642:	ee 0f       	add	r30, r30
 644:	97 95       	ror	r25
 646:	87 95       	ror	r24
 648:	08 95       	ret

0000064a <__divsf3>:
 64a:	0e 94 39 03 	call	0x672	; 0x672 <__divsf3x>
 64e:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_round>
 652:	0e 94 13 04 	call	0x826	; 0x826 <__fp_pscB>
 656:	58 f0       	brcs	.+22     	; 0x66e <__divsf3+0x24>
 658:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_pscA>
 65c:	40 f0       	brcs	.+16     	; 0x66e <__divsf3+0x24>
 65e:	29 f4       	brne	.+10     	; 0x66a <__divsf3+0x20>
 660:	5f 3f       	cpi	r21, 0xFF	; 255
 662:	29 f0       	breq	.+10     	; 0x66e <__divsf3+0x24>
 664:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_inf>
 668:	51 11       	cpse	r21, r1
 66a:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_szero>
 66e:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_nan>

00000672 <__divsf3x>:
 672:	0e 94 2b 04 	call	0x856	; 0x856 <__fp_split3>
 676:	68 f3       	brcs	.-38     	; 0x652 <__divsf3+0x8>

00000678 <__divsf3_pse>:
 678:	99 23       	and	r25, r25
 67a:	b1 f3       	breq	.-20     	; 0x668 <__divsf3+0x1e>
 67c:	55 23       	and	r21, r21
 67e:	91 f3       	breq	.-28     	; 0x664 <__divsf3+0x1a>
 680:	95 1b       	sub	r25, r21
 682:	55 0b       	sbc	r21, r21
 684:	bb 27       	eor	r27, r27
 686:	aa 27       	eor	r26, r26
 688:	62 17       	cp	r22, r18
 68a:	73 07       	cpc	r23, r19
 68c:	84 07       	cpc	r24, r20
 68e:	38 f0       	brcs	.+14     	; 0x69e <__divsf3_pse+0x26>
 690:	9f 5f       	subi	r25, 0xFF	; 255
 692:	5f 4f       	sbci	r21, 0xFF	; 255
 694:	22 0f       	add	r18, r18
 696:	33 1f       	adc	r19, r19
 698:	44 1f       	adc	r20, r20
 69a:	aa 1f       	adc	r26, r26
 69c:	a9 f3       	breq	.-22     	; 0x688 <__divsf3_pse+0x10>
 69e:	35 d0       	rcall	.+106    	; 0x70a <__divsf3_pse+0x92>
 6a0:	0e 2e       	mov	r0, r30
 6a2:	3a f0       	brmi	.+14     	; 0x6b2 <__divsf3_pse+0x3a>
 6a4:	e0 e8       	ldi	r30, 0x80	; 128
 6a6:	32 d0       	rcall	.+100    	; 0x70c <__divsf3_pse+0x94>
 6a8:	91 50       	subi	r25, 0x01	; 1
 6aa:	50 40       	sbci	r21, 0x00	; 0
 6ac:	e6 95       	lsr	r30
 6ae:	00 1c       	adc	r0, r0
 6b0:	ca f7       	brpl	.-14     	; 0x6a4 <__divsf3_pse+0x2c>
 6b2:	2b d0       	rcall	.+86     	; 0x70a <__divsf3_pse+0x92>
 6b4:	fe 2f       	mov	r31, r30
 6b6:	29 d0       	rcall	.+82     	; 0x70a <__divsf3_pse+0x92>
 6b8:	66 0f       	add	r22, r22
 6ba:	77 1f       	adc	r23, r23
 6bc:	88 1f       	adc	r24, r24
 6be:	bb 1f       	adc	r27, r27
 6c0:	26 17       	cp	r18, r22
 6c2:	37 07       	cpc	r19, r23
 6c4:	48 07       	cpc	r20, r24
 6c6:	ab 07       	cpc	r26, r27
 6c8:	b0 e8       	ldi	r27, 0x80	; 128
 6ca:	09 f0       	breq	.+2      	; 0x6ce <__divsf3_pse+0x56>
 6cc:	bb 0b       	sbc	r27, r27
 6ce:	80 2d       	mov	r24, r0
 6d0:	bf 01       	movw	r22, r30
 6d2:	ff 27       	eor	r31, r31
 6d4:	93 58       	subi	r25, 0x83	; 131
 6d6:	5f 4f       	sbci	r21, 0xFF	; 255
 6d8:	3a f0       	brmi	.+14     	; 0x6e8 <__divsf3_pse+0x70>
 6da:	9e 3f       	cpi	r25, 0xFE	; 254
 6dc:	51 05       	cpc	r21, r1
 6de:	78 f0       	brcs	.+30     	; 0x6fe <__divsf3_pse+0x86>
 6e0:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_inf>
 6e4:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_szero>
 6e8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ea:	e4 f3       	brlt	.-8      	; 0x6e4 <__divsf3_pse+0x6c>
 6ec:	98 3e       	cpi	r25, 0xE8	; 232
 6ee:	d4 f3       	brlt	.-12     	; 0x6e4 <__divsf3_pse+0x6c>
 6f0:	86 95       	lsr	r24
 6f2:	77 95       	ror	r23
 6f4:	67 95       	ror	r22
 6f6:	b7 95       	ror	r27
 6f8:	f7 95       	ror	r31
 6fa:	9f 5f       	subi	r25, 0xFF	; 255
 6fc:	c9 f7       	brne	.-14     	; 0x6f0 <__divsf3_pse+0x78>
 6fe:	88 0f       	add	r24, r24
 700:	91 1d       	adc	r25, r1
 702:	96 95       	lsr	r25
 704:	87 95       	ror	r24
 706:	97 f9       	bld	r25, 7
 708:	08 95       	ret
 70a:	e1 e0       	ldi	r30, 0x01	; 1
 70c:	66 0f       	add	r22, r22
 70e:	77 1f       	adc	r23, r23
 710:	88 1f       	adc	r24, r24
 712:	bb 1f       	adc	r27, r27
 714:	62 17       	cp	r22, r18
 716:	73 07       	cpc	r23, r19
 718:	84 07       	cpc	r24, r20
 71a:	ba 07       	cpc	r27, r26
 71c:	20 f0       	brcs	.+8      	; 0x726 <__divsf3_pse+0xae>
 71e:	62 1b       	sub	r22, r18
 720:	73 0b       	sbc	r23, r19
 722:	84 0b       	sbc	r24, r20
 724:	ba 0b       	sbc	r27, r26
 726:	ee 1f       	adc	r30, r30
 728:	88 f7       	brcc	.-30     	; 0x70c <__divsf3_pse+0x94>
 72a:	e0 95       	com	r30
 72c:	08 95       	ret

0000072e <__fixunssfsi>:
 72e:	0e 94 33 04 	call	0x866	; 0x866 <__fp_splitA>
 732:	88 f0       	brcs	.+34     	; 0x756 <__fixunssfsi+0x28>
 734:	9f 57       	subi	r25, 0x7F	; 127
 736:	98 f0       	brcs	.+38     	; 0x75e <__fixunssfsi+0x30>
 738:	b9 2f       	mov	r27, r25
 73a:	99 27       	eor	r25, r25
 73c:	b7 51       	subi	r27, 0x17	; 23
 73e:	b0 f0       	brcs	.+44     	; 0x76c <__fixunssfsi+0x3e>
 740:	e1 f0       	breq	.+56     	; 0x77a <__fixunssfsi+0x4c>
 742:	66 0f       	add	r22, r22
 744:	77 1f       	adc	r23, r23
 746:	88 1f       	adc	r24, r24
 748:	99 1f       	adc	r25, r25
 74a:	1a f0       	brmi	.+6      	; 0x752 <__fixunssfsi+0x24>
 74c:	ba 95       	dec	r27
 74e:	c9 f7       	brne	.-14     	; 0x742 <__fixunssfsi+0x14>
 750:	14 c0       	rjmp	.+40     	; 0x77a <__fixunssfsi+0x4c>
 752:	b1 30       	cpi	r27, 0x01	; 1
 754:	91 f0       	breq	.+36     	; 0x77a <__fixunssfsi+0x4c>
 756:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_zero>
 75a:	b1 e0       	ldi	r27, 0x01	; 1
 75c:	08 95       	ret
 75e:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__fp_zero>
 762:	67 2f       	mov	r22, r23
 764:	78 2f       	mov	r23, r24
 766:	88 27       	eor	r24, r24
 768:	b8 5f       	subi	r27, 0xF8	; 248
 76a:	39 f0       	breq	.+14     	; 0x77a <__fixunssfsi+0x4c>
 76c:	b9 3f       	cpi	r27, 0xF9	; 249
 76e:	cc f3       	brlt	.-14     	; 0x762 <__fixunssfsi+0x34>
 770:	86 95       	lsr	r24
 772:	77 95       	ror	r23
 774:	67 95       	ror	r22
 776:	b3 95       	inc	r27
 778:	d9 f7       	brne	.-10     	; 0x770 <__fixunssfsi+0x42>
 77a:	3e f4       	brtc	.+14     	; 0x78a <__fixunssfsi+0x5c>
 77c:	90 95       	com	r25
 77e:	80 95       	com	r24
 780:	70 95       	com	r23
 782:	61 95       	neg	r22
 784:	7f 4f       	sbci	r23, 0xFF	; 255
 786:	8f 4f       	sbci	r24, 0xFF	; 255
 788:	9f 4f       	sbci	r25, 0xFF	; 255
 78a:	08 95       	ret

0000078c <__floatunsisf>:
 78c:	e8 94       	clt
 78e:	09 c0       	rjmp	.+18     	; 0x7a2 <__floatsisf+0x12>

00000790 <__floatsisf>:
 790:	97 fb       	bst	r25, 7
 792:	3e f4       	brtc	.+14     	; 0x7a2 <__floatsisf+0x12>
 794:	90 95       	com	r25
 796:	80 95       	com	r24
 798:	70 95       	com	r23
 79a:	61 95       	neg	r22
 79c:	7f 4f       	sbci	r23, 0xFF	; 255
 79e:	8f 4f       	sbci	r24, 0xFF	; 255
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	99 23       	and	r25, r25
 7a4:	a9 f0       	breq	.+42     	; 0x7d0 <__floatsisf+0x40>
 7a6:	f9 2f       	mov	r31, r25
 7a8:	96 e9       	ldi	r25, 0x96	; 150
 7aa:	bb 27       	eor	r27, r27
 7ac:	93 95       	inc	r25
 7ae:	f6 95       	lsr	r31
 7b0:	87 95       	ror	r24
 7b2:	77 95       	ror	r23
 7b4:	67 95       	ror	r22
 7b6:	b7 95       	ror	r27
 7b8:	f1 11       	cpse	r31, r1
 7ba:	f8 cf       	rjmp	.-16     	; 0x7ac <__floatsisf+0x1c>
 7bc:	fa f4       	brpl	.+62     	; 0x7fc <__floatsisf+0x6c>
 7be:	bb 0f       	add	r27, r27
 7c0:	11 f4       	brne	.+4      	; 0x7c6 <__floatsisf+0x36>
 7c2:	60 ff       	sbrs	r22, 0
 7c4:	1b c0       	rjmp	.+54     	; 0x7fc <__floatsisf+0x6c>
 7c6:	6f 5f       	subi	r22, 0xFF	; 255
 7c8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ca:	8f 4f       	sbci	r24, 0xFF	; 255
 7cc:	9f 4f       	sbci	r25, 0xFF	; 255
 7ce:	16 c0       	rjmp	.+44     	; 0x7fc <__floatsisf+0x6c>
 7d0:	88 23       	and	r24, r24
 7d2:	11 f0       	breq	.+4      	; 0x7d8 <__floatsisf+0x48>
 7d4:	96 e9       	ldi	r25, 0x96	; 150
 7d6:	11 c0       	rjmp	.+34     	; 0x7fa <__floatsisf+0x6a>
 7d8:	77 23       	and	r23, r23
 7da:	21 f0       	breq	.+8      	; 0x7e4 <__floatsisf+0x54>
 7dc:	9e e8       	ldi	r25, 0x8E	; 142
 7de:	87 2f       	mov	r24, r23
 7e0:	76 2f       	mov	r23, r22
 7e2:	05 c0       	rjmp	.+10     	; 0x7ee <__floatsisf+0x5e>
 7e4:	66 23       	and	r22, r22
 7e6:	71 f0       	breq	.+28     	; 0x804 <__floatsisf+0x74>
 7e8:	96 e8       	ldi	r25, 0x86	; 134
 7ea:	86 2f       	mov	r24, r22
 7ec:	70 e0       	ldi	r23, 0x00	; 0
 7ee:	60 e0       	ldi	r22, 0x00	; 0
 7f0:	2a f0       	brmi	.+10     	; 0x7fc <__floatsisf+0x6c>
 7f2:	9a 95       	dec	r25
 7f4:	66 0f       	add	r22, r22
 7f6:	77 1f       	adc	r23, r23
 7f8:	88 1f       	adc	r24, r24
 7fa:	da f7       	brpl	.-10     	; 0x7f2 <__floatsisf+0x62>
 7fc:	88 0f       	add	r24, r24
 7fe:	96 95       	lsr	r25
 800:	87 95       	ror	r24
 802:	97 f9       	bld	r25, 7
 804:	08 95       	ret

00000806 <__fp_inf>:
 806:	97 f9       	bld	r25, 7
 808:	9f 67       	ori	r25, 0x7F	; 127
 80a:	80 e8       	ldi	r24, 0x80	; 128
 80c:	70 e0       	ldi	r23, 0x00	; 0
 80e:	60 e0       	ldi	r22, 0x00	; 0
 810:	08 95       	ret

00000812 <__fp_nan>:
 812:	9f ef       	ldi	r25, 0xFF	; 255
 814:	80 ec       	ldi	r24, 0xC0	; 192
 816:	08 95       	ret

00000818 <__fp_pscA>:
 818:	00 24       	eor	r0, r0
 81a:	0a 94       	dec	r0
 81c:	16 16       	cp	r1, r22
 81e:	17 06       	cpc	r1, r23
 820:	18 06       	cpc	r1, r24
 822:	09 06       	cpc	r0, r25
 824:	08 95       	ret

00000826 <__fp_pscB>:
 826:	00 24       	eor	r0, r0
 828:	0a 94       	dec	r0
 82a:	12 16       	cp	r1, r18
 82c:	13 06       	cpc	r1, r19
 82e:	14 06       	cpc	r1, r20
 830:	05 06       	cpc	r0, r21
 832:	08 95       	ret

00000834 <__fp_round>:
 834:	09 2e       	mov	r0, r25
 836:	03 94       	inc	r0
 838:	00 0c       	add	r0, r0
 83a:	11 f4       	brne	.+4      	; 0x840 <__fp_round+0xc>
 83c:	88 23       	and	r24, r24
 83e:	52 f0       	brmi	.+20     	; 0x854 <__fp_round+0x20>
 840:	bb 0f       	add	r27, r27
 842:	40 f4       	brcc	.+16     	; 0x854 <__fp_round+0x20>
 844:	bf 2b       	or	r27, r31
 846:	11 f4       	brne	.+4      	; 0x84c <__fp_round+0x18>
 848:	60 ff       	sbrs	r22, 0
 84a:	04 c0       	rjmp	.+8      	; 0x854 <__fp_round+0x20>
 84c:	6f 5f       	subi	r22, 0xFF	; 255
 84e:	7f 4f       	sbci	r23, 0xFF	; 255
 850:	8f 4f       	sbci	r24, 0xFF	; 255
 852:	9f 4f       	sbci	r25, 0xFF	; 255
 854:	08 95       	ret

00000856 <__fp_split3>:
 856:	57 fd       	sbrc	r21, 7
 858:	90 58       	subi	r25, 0x80	; 128
 85a:	44 0f       	add	r20, r20
 85c:	55 1f       	adc	r21, r21
 85e:	59 f0       	breq	.+22     	; 0x876 <__fp_splitA+0x10>
 860:	5f 3f       	cpi	r21, 0xFF	; 255
 862:	71 f0       	breq	.+28     	; 0x880 <__fp_splitA+0x1a>
 864:	47 95       	ror	r20

00000866 <__fp_splitA>:
 866:	88 0f       	add	r24, r24
 868:	97 fb       	bst	r25, 7
 86a:	99 1f       	adc	r25, r25
 86c:	61 f0       	breq	.+24     	; 0x886 <__fp_splitA+0x20>
 86e:	9f 3f       	cpi	r25, 0xFF	; 255
 870:	79 f0       	breq	.+30     	; 0x890 <__fp_splitA+0x2a>
 872:	87 95       	ror	r24
 874:	08 95       	ret
 876:	12 16       	cp	r1, r18
 878:	13 06       	cpc	r1, r19
 87a:	14 06       	cpc	r1, r20
 87c:	55 1f       	adc	r21, r21
 87e:	f2 cf       	rjmp	.-28     	; 0x864 <__stack+0x5>
 880:	46 95       	lsr	r20
 882:	f1 df       	rcall	.-30     	; 0x866 <__fp_splitA>
 884:	08 c0       	rjmp	.+16     	; 0x896 <__fp_splitA+0x30>
 886:	16 16       	cp	r1, r22
 888:	17 06       	cpc	r1, r23
 88a:	18 06       	cpc	r1, r24
 88c:	99 1f       	adc	r25, r25
 88e:	f1 cf       	rjmp	.-30     	; 0x872 <__fp_splitA+0xc>
 890:	86 95       	lsr	r24
 892:	71 05       	cpc	r23, r1
 894:	61 05       	cpc	r22, r1
 896:	08 94       	sec
 898:	08 95       	ret

0000089a <__fp_zero>:
 89a:	e8 94       	clt

0000089c <__fp_szero>:
 89c:	bb 27       	eor	r27, r27
 89e:	66 27       	eor	r22, r22
 8a0:	77 27       	eor	r23, r23
 8a2:	cb 01       	movw	r24, r22
 8a4:	97 f9       	bld	r25, 7
 8a6:	08 95       	ret

000008a8 <__mulsf3>:
 8a8:	0e 94 67 04 	call	0x8ce	; 0x8ce <__mulsf3x>
 8ac:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_round>
 8b0:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_pscA>
 8b4:	38 f0       	brcs	.+14     	; 0x8c4 <__mulsf3+0x1c>
 8b6:	0e 94 13 04 	call	0x826	; 0x826 <__fp_pscB>
 8ba:	20 f0       	brcs	.+8      	; 0x8c4 <__mulsf3+0x1c>
 8bc:	95 23       	and	r25, r21
 8be:	11 f0       	breq	.+4      	; 0x8c4 <__mulsf3+0x1c>
 8c0:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_inf>
 8c4:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_nan>
 8c8:	11 24       	eor	r1, r1
 8ca:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_szero>

000008ce <__mulsf3x>:
 8ce:	0e 94 2b 04 	call	0x856	; 0x856 <__fp_split3>
 8d2:	70 f3       	brcs	.-36     	; 0x8b0 <__mulsf3+0x8>

000008d4 <__mulsf3_pse>:
 8d4:	95 9f       	mul	r25, r21
 8d6:	c1 f3       	breq	.-16     	; 0x8c8 <__mulsf3+0x20>
 8d8:	95 0f       	add	r25, r21
 8da:	50 e0       	ldi	r21, 0x00	; 0
 8dc:	55 1f       	adc	r21, r21
 8de:	62 9f       	mul	r22, r18
 8e0:	f0 01       	movw	r30, r0
 8e2:	72 9f       	mul	r23, r18
 8e4:	bb 27       	eor	r27, r27
 8e6:	f0 0d       	add	r31, r0
 8e8:	b1 1d       	adc	r27, r1
 8ea:	63 9f       	mul	r22, r19
 8ec:	aa 27       	eor	r26, r26
 8ee:	f0 0d       	add	r31, r0
 8f0:	b1 1d       	adc	r27, r1
 8f2:	aa 1f       	adc	r26, r26
 8f4:	64 9f       	mul	r22, r20
 8f6:	66 27       	eor	r22, r22
 8f8:	b0 0d       	add	r27, r0
 8fa:	a1 1d       	adc	r26, r1
 8fc:	66 1f       	adc	r22, r22
 8fe:	82 9f       	mul	r24, r18
 900:	22 27       	eor	r18, r18
 902:	b0 0d       	add	r27, r0
 904:	a1 1d       	adc	r26, r1
 906:	62 1f       	adc	r22, r18
 908:	73 9f       	mul	r23, r19
 90a:	b0 0d       	add	r27, r0
 90c:	a1 1d       	adc	r26, r1
 90e:	62 1f       	adc	r22, r18
 910:	83 9f       	mul	r24, r19
 912:	a0 0d       	add	r26, r0
 914:	61 1d       	adc	r22, r1
 916:	22 1f       	adc	r18, r18
 918:	74 9f       	mul	r23, r20
 91a:	33 27       	eor	r19, r19
 91c:	a0 0d       	add	r26, r0
 91e:	61 1d       	adc	r22, r1
 920:	23 1f       	adc	r18, r19
 922:	84 9f       	mul	r24, r20
 924:	60 0d       	add	r22, r0
 926:	21 1d       	adc	r18, r1
 928:	82 2f       	mov	r24, r18
 92a:	76 2f       	mov	r23, r22
 92c:	6a 2f       	mov	r22, r26
 92e:	11 24       	eor	r1, r1
 930:	9f 57       	subi	r25, 0x7F	; 127
 932:	50 40       	sbci	r21, 0x00	; 0
 934:	9a f0       	brmi	.+38     	; 0x95c <__mulsf3_pse+0x88>
 936:	f1 f0       	breq	.+60     	; 0x974 <__mulsf3_pse+0xa0>
 938:	88 23       	and	r24, r24
 93a:	4a f0       	brmi	.+18     	; 0x94e <__mulsf3_pse+0x7a>
 93c:	ee 0f       	add	r30, r30
 93e:	ff 1f       	adc	r31, r31
 940:	bb 1f       	adc	r27, r27
 942:	66 1f       	adc	r22, r22
 944:	77 1f       	adc	r23, r23
 946:	88 1f       	adc	r24, r24
 948:	91 50       	subi	r25, 0x01	; 1
 94a:	50 40       	sbci	r21, 0x00	; 0
 94c:	a9 f7       	brne	.-22     	; 0x938 <__mulsf3_pse+0x64>
 94e:	9e 3f       	cpi	r25, 0xFE	; 254
 950:	51 05       	cpc	r21, r1
 952:	80 f0       	brcs	.+32     	; 0x974 <__mulsf3_pse+0xa0>
 954:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_inf>
 958:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__fp_szero>
 95c:	5f 3f       	cpi	r21, 0xFF	; 255
 95e:	e4 f3       	brlt	.-8      	; 0x958 <__mulsf3_pse+0x84>
 960:	98 3e       	cpi	r25, 0xE8	; 232
 962:	d4 f3       	brlt	.-12     	; 0x958 <__mulsf3_pse+0x84>
 964:	86 95       	lsr	r24
 966:	77 95       	ror	r23
 968:	67 95       	ror	r22
 96a:	b7 95       	ror	r27
 96c:	f7 95       	ror	r31
 96e:	e7 95       	ror	r30
 970:	9f 5f       	subi	r25, 0xFF	; 255
 972:	c1 f7       	brne	.-16     	; 0x964 <__mulsf3_pse+0x90>
 974:	fe 2b       	or	r31, r30
 976:	88 0f       	add	r24, r24
 978:	91 1d       	adc	r25, r1
 97a:	96 95       	lsr	r25
 97c:	87 95       	ror	r24
 97e:	97 f9       	bld	r25, 7
 980:	08 95       	ret

00000982 <_exit>:
 982:	f8 94       	cli

00000984 <__stop_program>:
 984:	ff cf       	rjmp	.-2      	; 0x984 <__stop_program>
